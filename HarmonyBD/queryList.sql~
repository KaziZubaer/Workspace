--user auto increment creation
CREATE SEQUENCE USER_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 999999
NOCYCLE ;

--user table creation
CREATE INDEX USERS_INDEX ON USERS(userName);

CREATE TABLE Users (
	userId INT PRIMARY KEY,
 	loginId VARCHAR2(20) UNIQUE,
 	password VARCHAR2(20) NOT NULL,
 	userName VARCHAR2(20) NOT NULL,
 	address VARCHAR2(500) NOT NULL,
 	phoneNo VARCHAR2(15) NOT NULL
);

CREATE SEQUENCE PUBLISHERS_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 9999
NOCYCLE ;

CREATE INDEX PUBLISHERS_INDEX ON PUBLISHERS(publisherName);

CREATE TABLE Publishers(
	publisherId INT PRIMARY KEY,
 	publisherName VARCHAR2(20) NOT NULL,
  publisherAddress VARCHAR2(20) NOT NULL
 );
 
CREATE SEQUENCE BOOKS_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 9999
NOCYCLE ;

CREATE INDEX BOOKS_INDEXES ON BOOKS(title,authorId,tagId,publicationId,ISBN);
 
--books table creation
CREATE TABLE Books(
	bookId INT PRIMARY KEY,
  previousEditionBookId INT,
  authorId INT NOT NULL,
  publisherId INT NOT NULL,
  tagId INT NOT NULL,
 	title VARCHAR2(20) NOT NULL,
 	price NUMBER NOT NULL,
  ISBN VARCHAR2(20)NOT NULL,
 	edition INT ,
  publicationYear INT,
  firstPublished INT,
  amountRemaining INT NOT NULL,
  avgRating NUMBER,
  CONSTRAINT PREV_EDITION_ID_FK FOREIGN KEY(previousEditionBookId) REFERENCES Books(bookId),

  CONSTRAINT authIdFKB FOREIGN KEY(authorId) REFERENCES AuthorS(authorId),
  CONSTRAINT publishIdFKB FOREIGN KEY(publisherId) REFERENCES PUBLISHERS(publisherId),
   CONSTRAINT tagIdFKB FOREIGN KEY(tagId) REFERENCES TAGS(tagId)
       
);

CREATE SEQUENCE AUTHORS_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 99999
NOCYCLE ;

CREATE INDEX AUTHORS_INDEX ON AUTHORS(authorName);

CREATE TABLE AUTHORS(
  authorId INT PRIMARY KEY,
  authorName VARCHAR2(100) NOT NULL,
  affiliation VARCHAR2(100)
);

CREATE TABLE WRITTEN(
  authorId INT NOT NULL,
  bookId INT NOT NULL,
  CONSTRAINT authIdFK FOREIGN KEY(authorId) REFERENCES AuthorS(authorId),
  CONSTRAINT bookIdFK FOREIGN KEY(bookId) REFERENCES BOOKS(bookId)
);

CREATE SEQUENCE TAGS_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 99999
NOCYCLE ;

CREATE INDEX TAGS_INDEX ON TAGS(tag);

CREATE TABLE TAGS(
  tagId INT PRIMARY KEY,
  tag VARCHAR2(100)NOT NULL  
);

CREATE TABLE TAGGED(
  tagId INT NOT NULL,
  bookId INT NOT NULL,
  CONSTRAINT tagIdIdFK FOREIGN KEY(tagId) REFERENCES TAGS(tagId),
  CONSTRAINT bookIdFKT FOREIGN KEY(bookId) REFERENCES BOOKS(bookId)
);

CREATE SEQUENCE ORDERS_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 99999
NOCYCLE ;

CREATE INDEX ORDERS_INDEX ON ORDERS(bookId,userId,billingId,orderDate);

CREATE TABLE ORDERS(
  orderId INT PRIMARY KEY,
  bookId INT NOT NULL,
  userId INT NOT NULL,
  billingId INT NOT NULL,
  orderDate DATE DEFAULT SYSDATE,
  quantity INT NOT NULL,
  CONSTRAINT BOOKFKO FOREIGN KEY(bookId) REFERENCES BOOKS(bookId),
  CONSTRAINT USERFKO FOREIGN KEY(userId) REFERENCES Users(userId),
  CONSTRAINT BILLFKO FOREIGN KEY(billingId) REFERENCES Users(billingId)
);

CREATE SEQUENCE BILLINGS_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 99999
NOCYCLE ;
CREATE INDEX BILLINGS_TAGS ON BILLINGS(billingDate,status,userId);

CREATE TABLE BILLINGS(
  billingId INT PRIMARY KEY,
  userId int not NULL,
  billingDate DATE DEFAULT SYSDATE,
  status VARCHAR2(100),
  CONSTRAINT userFKBI FOREIGN KEY(userId) REFERENCES USERS(userId)
);

CREATE SEQUENCE INVENTORY_PK_SEQ
INCREMENT BY 1
START WITH 1000
MAXVALUE 99999
NOCYCLE ;

CREATE INDEX INVENTORY_INDEX ON INVENTORY(bookId,dateOfPurchase);

CREATE TABLE INVENTORY(
 inventoryId INT PRIMARY KEY,
 bookId VARCHAR2(100) NOT NULL,
 dateOfPurchase DATE DEFAULT SYSDATE,
 cost NUMBER NOT NULL,
 AMOUNT INT NOT NULL,
 CONSTRAINT BOOKFKI FOREIGN KEY(bookId) REFERENCES BOOKS(bookId)
);



create 







